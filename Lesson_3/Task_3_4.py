
# Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников и возвращающую словарь,
# в котором ключи — первые буквы имён, а значения — списки, содержащие имена, начинающиеся с соответствующей буквы. Например:
# >>> thesaurus("Иван", "Мария", "Петр", "Илья")
# {
#     "И": ["Иван", "Илья"],
#     "М": ["Мария"],
#     "П": ["Петр"]
# }
# Подумайте: полезен ли будет вам оператор распаковки? Как поступить, если потребуется сортировка по ключам? Можно ли использовать словарь в этом случае?

# Task_3
def name_def(name):
    thesaurus = ('Иван', 'Мария', 'Петр', 'Илья', 'Андрей', 'Виктория', 'Артем', 'Сергей', 'Елена', 'Спок')
    name_result = {}
    name_list = []
    for i in thesaurus:
        if i[0] == name[0]:
            name_list.append(i)
    name_result.setdefault(name[0], name_list)
    return name_result

print(name_def('Еж'))

# *(вместо задачи 3) Написать функцию thesaurus_adv(),
# принимающую в качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь,
# в котором ключи — первые буквы фамилий, а значения — словари,
# реализованные по схеме предыдущего задания и содержащие записи, в которых фамилия начинается с соответствующей буквы.
# Task_4
def name_def(name):
    thesaurus = ('Иван', 'Мария', 'Петр', 'Илья', 'Андрей', 'Виктория', 'Артем', 'Сергей', 'Елена', 'Спок')
    name_result = {}
    name_list = []
    name_dict = {}
    count = 0
    for i in thesaurus:
        if i[0] == name[0]:
            name_list.append(i)
    name_result.setdefault(name[0], name_list)
    while count < len(name):
        if name[count] == ' ':
            last_name = name[count + 1]
        count = count + 1
    name_dict.setdefault(last_name, name_result)


    return name_dict

print(name_def('Сосиска Котлеткина'))
